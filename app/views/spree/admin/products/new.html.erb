<%if @product.errors.messages.keys.include?(:server_type)%>
    <% @product.errors.messages[:plan_type] = @product.errors.messages.delete :server_type %>
    <%= render partial: 'spree/admin/shared/error_messages', locals: { target: @product } %>
    <% @product.errors.messages[:server_type] = @product.errors.messages.delete :plan_type %>
<%else%>
     <%= render partial: 'spree/admin/shared/error_messages', locals: { target: @product } %>
<%end%>

<% content_for :page_title do %>
  <%= link_to Spree.t(:products), spree.admin_products_url %> /
  <%= Spree.t(:new_product) %>
<% end %>

<%= form_for [:admin, @product], html: { multipart: true } do |f| %>
  <fieldset data-hook="new_product">
    <%= f.field_container :name, class: ['form-group'] do %>
      <%= f.label :name, Spree.t(:name) %> <span class="required">*</span>
      <%= f.text_field :name, class: 'form-control title', required: :required %>
      <%= f.error_message_on :name %>
    <% end %>

    <div data-hook="admin_product_form_server_type">
      
      <%= f.field_container :server_type, class: ['form-group'] do %>
      <%= f.label :plan_type, raw(Spree.t(:plan_type) + required_span_tag) %>
      <%= f.select :server_type, options_for_select(plan_type_values(current_spree_user),f.object.server_type),{include_blank: true},class: 'form-control title', required: true %>
      <%= f.error_message_on :server_type %>
    <% end %>

    <%if current_spree_user.superadmin?%>
      <div data-hook="admin_product_form_reseller_product">
         <%= f.field_container :solid_cp_master_plan_id, class: ['form-group'], style: 'display:none' do %>
          <%= f.label :solid_cp_master_plan_id, raw(Spree.t(:solid_cp_plan) + required_span_tag) %>
          <%= f.select :solid_cp_master_plan_id, options_for_select(SolidCp::Plan.master_plans_dropdown(current_spree_user) ,f.object.solid_cp_master_plan_id),{prompt: '--Select--'},class: 'form-control title', id: 'product_solid_cp_master_plan' %>
          <%= f.error_message_on :solid_cp_master_plan_id %>
        <% end %>

        <%= f.field_container :reseller_product, class: ['form-group'] do %>
          <%= f.check_box :reseller_product,class: 'mr-2',checked: true%>
          <%= f.label :reseller_product, raw(Spree.t(:reseller_product)) %>
          <%= f.error_message_on :reseller_product %>
        <% end %>
      </div>
    <%end%>

    <div data-hook="admin_product_form_subscribable">
        <%= f.field_container :subscribable, class: ['form-group'] do %>
        <%= f.check_box :subscribable,class: 'mr-2',checked: true%>
        <%= f.label :subscribable, raw(Spree.t(:subscribable)) %>
        <%= f.error_message_on :subscribable %>
      <% end %>
    </div>

    <div id="isp_config_template_div" class="d-none">
      <div id="isp_config_limits">
        <%=render :partial=>'isp_config_quota_form',:locals=>{f: f}%>
      </div>
    </div>
    
    <div id="solid_cp_quota_group_div" class="d-none">
      <%if current_spree_user.store_admin?%>
        <%=f.hidden_field :solid_cp_master_plan_id, value: current_store.solid_cp_master_plan_id %>
      <%end%>

      <div id="product_quota_groups">
        <%@form = f%>
        <%=render :partial=>'solid_cp_quota_form',:locals=>{f: f,solid_cp_plan_id: ""} if current_spree_user.store_admin?%>
      </div>
    </div>
   
    <div data-hook="new_product_attrs" class="row">
      <% unless @product.has_variants? %>
        <div data-hook="new_product_sku" class="col-12 col-md-4">
          <%= f.field_container :sku, class: ['form-group'] do %>
            <%= f.label :sku, Spree.t(:sku) %>
            <%= f.text_field :sku, size: 16, class: 'form-control' %>
            <%= f.error_message_on :sku %>
          <% end %>
        </div>
      <% end %>

      
      <div data-hook="new_product_prototype" class="col-12 col-md-4">
        <%= f.field_container :prototype, class: ['form-group'] do %>
          <%= f.label :prototype_id, Spree.t(:prototype) %>
          <%= f.collection_select :prototype_id, current_store.account.prototypes, :id, :name, { include_blank: true }, { class: 'select2-clear w-100' } %>
        <% end %>
      </div>

      <div data-hook="new_product_price" class="col-12 col-md-4">
        <%= f.field_container :price, class: ['form-group'] do %>
          <%= f.label :price, Spree.t(:master_price) %> <span class="required">*</span>
          <%= f.text_field :price, value: number_to_currency(@product.price, unit: ''), class: 'form-control', required: :required %>
          <%= f.error_message_on :price %>
        <% end %>
      </div>


      <div data-hook="new_product_validity" class="col-12 col-md-4">
        <%= f.field_container :validity, class: ['form-group'] do %>
          <%= f.label :validity, Spree.t(:validity_in_months) %> <span class="required">*</span>
          <%= f.select :validity, options_for_select(months_dropdown, selected: f.object.validity || 1),{}, required: true,class: 'form-control' %>
          <%= f.error_message_on :validity %>
        <% end %>
      </div>

      <div data-hook="new_product_available_on" class="col-12 col-md-4">
        <%= f.field_container :available_on, class: ['form-group'] do %>
          <%= f.label :available_on, Spree.t(:available_on) %>
          <%= f.error_message_on :available_on %>

          <div class="input-group datepicker"
               data-wrap="true"
               data-alt-format="<%= Spree.t(:fpr_human_friendly_date_format, scope: 'date_picker', default: 'M j, Y') %>">
            <%= f.text_field :available_on,
                             value: datepicker_field_value(@product.available_on),
                             placeholder: Spree.t(:select_a_date),
                             class: 'form-control shadow-none',
                             'data-input':'' %>

            <%= render partial: 'spree/admin/shared/cal_close' %>
          </div>
        <% end %>
      </div>

       <div class="col-12 col-md-4">
        <%= f.field_container :description, class: ['form-group'] do %>
          <%= f.label :description, Spree.t(:description) %>
          <%= f.error_message_on :available_on %>

          <%= f.text_area :description, class: 'form-control' %>
        <% end %>
      </div>


      <%=f.hidden_field :shipping_category_id ,:value=>Spree::ShippingCategory.find_or_create_by({:name=>'Default'}).id%>

      <%if false%>

      <div data-hook="new_product_shipping_category" class="col-12 col-md-4">
       

        <%= f.field_container :shipping_category, class: ['form-group'] do %>
          <%= f.label :shipping_category_id, Spree.t(:shipping_categories) %><span class="required">*</span>
          <%= f.collection_select(:shipping_category_id, @shipping_categories, :id, :name, { include_blank: Spree.t('match_choices.none') }, { class: 'select2 w-100' }) %>
          <%= f.error_message_on :shipping_category_id %>
        <% end %>
      </div>

      <%end%>
    </div>

    <div data-hook="product-from-prototype" id="product-from-prototype">
      <%= render template: 'spree/admin/prototypes/show' if @prototype %>
    </div>
    <%= render partial: 'spree/admin/shared/new_resource_links' %>

  </fieldset>
<% end %>

<script type="text/javascript">
//<![CDATA[
  (function($){
    var base_url = "<%= spree.admin_prototypes_url %>";
    var prototype_select = $('#product_prototype_id');
    prototype_select.change(function() {
      var id = prototype_select.val();
      if (id.length) {
        var url = new Uri(base_url);
        url.setPath(url.path() + '/' + id);
        $('#product-from-prototype').load(url.toString());
      } else {
        $('#product-from-prototype').empty();
      }
    })
    if (prototype_select.html() == "") {
      prototype_select.change();
    }
  })(jQuery);


  $(document).ready(function (argument) {

    $('.array-field-single').on('change',function (argument) {
      var val = "";
      $('.array-field-single:checked').each(function(id,el){val+=$(el).val()+","});
      $('#product_isp_config_limit_attributes_web_php_options').val(val)
    });

    $('#product_solid_cp_master_plan_id').on('change',function(){
       var solidcpPlanId = $(this).val();
        $.get('/account/get_hosting_plan_quotas?solid_cp_plan_id='+solidcpPlanId,function(data){
        
        });
    });

    $('#product_server_type').on('change',function (argument) {

      var type = $(this).val();
      hideSolidCPDropdown(type);
        if(type == 'windows') 
        {
          $('#solid_cp_quota_group_div').removeClass('d-none');
          $('#isp_config_template_div').addClass('d-none');
        } 
        else if(type == 'linux' || type == 'reseller_plan'){
          $('#solid_cp_quota_group_div').addClass('d-none');
          $('#isp_config_template_div').removeClass('d-none');
        }
        else
        {
          $('#isp_config_template_div').addClass('d-none');
          $('#solid_cp_quota_group_div').addClass('d-none');
        }        
    });

  });

  function hideSolidCPDropdown(val){
    if(val != 'reseller_plan'){
      $('#product_solid_cp_master_plan_id_field').hide();
    }
    else{
      $('#product_solid_cp_master_plan_id_field').show(); 
    }
  }

//]]>
</script>